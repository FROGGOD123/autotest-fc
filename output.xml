<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.12.4 on darwin)" generated="20250905 14:53:47.072" rpa="false">
<suite id="s1" name="财税云项目自动化案例" source="/Users/yeweixiong/Desktop/测试用文件/财税云项目自动化案例">
<suite id="s1-s1" name="接口案例" source="/Users/yeweixiong/Desktop/测试用文件/财税云项目自动化案例/接口案例">
<suite id="s1-s1-s1" name="财税云开放接口" source="/Users/yeweixiong/Desktop/测试用文件/财税云项目自动化案例/接口案例/财税云开放接口">
<suite id="s1-s1-s1-s1" name="交易链路开放接口" source="/Users/yeweixiong/Desktop/测试用文件/财税云项目自动化案例/接口案例/财税云开放接口/交易链路开放接口.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>连接财税云数据库</arg>
<arg>AND</arg>
<arg>连接数仓数据库</arg>
</arguments>
<kw name="连接财税云数据库" library="常用关键字">
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<arguments>
<arg>pymysql</arg>
<arg>financial_cloud</arg>
<arg>${fc_mysql_user}[${env}]</arg>
<arg>${fc_mysql_pwd}[${env}]</arg>
<arg>${fc_mysql_url}[${env}]</arg>
<arg>${fc_mysql_port}[${env}]</arg>
</arguments>
<msg timestamp="20250905 14:53:47.615" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg timestamp="20250905 14:53:47.615" level="INFO">Configuration file doesn't exist</msg>
<msg timestamp="20250905 14:53:47.627" level="INFO">Connect to DB using : pymysql.connect(db='financial_cloud', user='finance_test', passwd=***, host='rm-wz9u28bqy85v082837o.mysql.rds.aliyuncs.com', port=3306, charset='utf8mb4')</msg>
<status status="PASS" starttime="20250905 14:53:47.615" endtime="20250905 14:53:47.795"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:47.615" endtime="20250905 14:53:47.795"></status>
</kw>
<kw name="连接数仓数据库" library="常用关键字">
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<arguments>
<arg>psycopg2</arg>
<arg>financial_cloud</arg>
<arg>${dw_psySql_user}[${env}]</arg>
<arg>${dw_psySql_pwd}[${env}]</arg>
<arg>${dw_psySql_url}[${env}]</arg>
<arg>${dw_psySql_port}[${env}]</arg>
<arg>alias=dw</arg>
</arguments>
<msg timestamp="20250905 14:53:47.795" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg timestamp="20250905 14:53:47.796" level="INFO">Configuration file doesn't exist</msg>
<msg timestamp="20250905 14:53:47.816" level="INFO">Connect to DB using : psycopg2.connect(database='financial_cloud', user='BASIC$bo_test_group', password=***, host='hgpostcn-cn-1ls46jmnr0er-cn-shenzhen.hologres.aliyuncs.com', port=80)</msg>
<status status="PASS" starttime="20250905 14:53:47.795" endtime="20250905 14:53:48.037"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:47.795" endtime="20250905 14:53:48.037"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:47.615" endtime="20250905 14:53:48.037"></status>
</kw>
<test id="s1-s1-s1-s1-t1" name="本地供应商到客">
<kw name="本地供应商到客关键字">
<arguments>
<arg>SP00002382</arg>
<arg>109</arg>
<arg>CM00000010</arg>
<arg>1,2,4</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.loads('''${warehouse_subsidiary}''')</arg>
</arguments>
<assign>
<var>${warehouse_subsidiary_dict}</var>
</assign>
<msg timestamp="20250905 14:53:48.040" level="INFO">${warehouse_subsidiary_dict} = {'KH01PP': 'BO015', 'CN01SZ-CAM': 'BO002', 'CN01SZ-ID': 'BO002', 'CN01SZ-MY': 'BO002', 'CN01SZ-SG': 'BO002', 'CN01SZ-TH': 'BO002', 'CN01SZ-VN': 'BO002', 'ID03TGR': ['PT001', '109', 'BO005', 'BO004', '...</msg>
<status status="PASS" starttime="20250905 14:53:48.039" endtime="20250905 14:53:48.040"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>select subject_code from dim.dim_retail_public_sc_customer_df where customer_code='${end_customer}';</arg>
<arg>alias=dw</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:48.041" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;select subject_code from dim.dim_retail_public_sc_customer_df where customer_code='CM00000010';&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:48.301" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;subject_code&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;BO026&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:48.326" level="INFO">@{result} = [ ('BO026',) ]</msg>
<status status="PASS" starttime="20250905 14:53:48.040" endtime="20250905 14:53:48.326"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${result}[0][0]</arg>
</arguments>
<assign>
<var>${end_subsidiary}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:48.329" level="INFO">${value} = BO026</msg>
<status status="PASS" starttime="20250905 14:53:48.329" endtime="20250905 14:53:48.329"></status>
</kw>
<msg timestamp="20250905 14:53:48.329" level="INFO">${end_subsidiary} = BO026</msg>
<status status="PASS" starttime="20250905 14:53:48.326" endtime="20250905 14:53:48.329"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>SELECT count(*) from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_rule_id where tmr.delivery_model =14 and tmr.status=1 and UNIX_TIMESTAMP()&lt;tmr.end_time and UNIX_TIMESTAMP()&gt;tmr.start_time and tmrd.start_node in ('${start_supplier}','all') and tmrd.end_node in ('all','${end_customer}');</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:48.330" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT count(*) from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_rule_id where tmr.delivery_model =14 and tmr.status=1 and UNIX_TIMESTAMP()&lt;tmr.end_time and UNIX_TIMESTAMP()&gt;tmr.start_time and tmrd.start_node in ('SP00002382','all') and tmrd.end_node in ('all','CM00000010');&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:48.354" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;count(*)&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:48.371" level="INFO">@{result} = [ (2,) ]</msg>
<status status="PASS" starttime="20250905 14:53:48.329" endtime="20250905 14:53:48.371"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${result}[0][0]</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:48.371" level="INFO">${value} = 2</msg>
<status status="PASS" starttime="20250905 14:53:48.371" endtime="20250905 14:53:48.371"></status>
</kw>
<msg timestamp="20250905 14:53:48.371" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20250905 14:53:48.371" endtime="20250905 14:53:48.371"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${count}==0</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${MatchRule}</var>
</assign>
<msg timestamp="20250905 14:53:48.372" level="INFO">${MatchRule} = 1</msg>
<status status="PASS" starttime="20250905 14:53:48.371" endtime="20250905 14:53:48.372"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>SELECT tmr.rule_configs-&gt;'$[*].tcr_ids',tmrd.start_node ,tmrd.end_node from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_rule_id where tmr.delivery_model =14 and tmr.status=1 and UNIX_TIMESTAMP()&lt;tmr.end_time and UNIX_TIMESTAMP()&gt;tmr.start_time and tmrd.start_node in ('${start_supplier}','all') and tmrd.end_node in ('all','${end_customer}')</arg>
</arguments>
<assign>
<var>${tmr_sql}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:48.372" level="INFO">${value} = SELECT tmr.rule_configs-&gt;'$[*].tcr_ids',tmrd.start_node ,tmrd.end_node from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_...</msg>
<status status="PASS" starttime="20250905 14:53:48.372" endtime="20250905 14:53:48.372"></status>
</kw>
<msg timestamp="20250905 14:53:48.372" level="INFO">${tmr_sql} = SELECT tmr.rule_configs-&gt;'$[*].tcr_ids',tmrd.start_node ,tmrd.end_node from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_...</msg>
<status status="PASS" starttime="20250905 14:53:48.372" endtime="20250905 14:53:48.372"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>${tmr_sql}</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:48.373" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT tmr.rule_configs-&gt;'$[*].tcr_ids',tmrd.start_node ,tmrd.end_node from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_rule_id where tmr.delivery_model =14 and tmr.status=1 and UNIX_TIMESTAMP()&lt;tmr.end_time and UNIX_TIMESTAMP()&gt;tmr.start_time and tmrd.start_node in ('SP00002382','all') and tmrd.end_node in ('all','CM00000010')&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:48.411" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 2 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tmr.rule_configs-&gt;'$[*].tcr_ids'&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;start_node&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;end_node&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;[[1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040]]&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;all&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;all&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;[[1911694241511464960]]&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SP00002382&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;all&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:48.439" level="INFO">@{result} = [ ('[[1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040]]', 'all', 'all') | ('[[1911694241511464960]]', 'SP00002382', 'all') ]</msg>
<status status="PASS" starttime="20250905 14:53:48.372" endtime="20250905 14:53:48.439"></status>
</kw>
<kw name="${i} IN RANGE [ ${count} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${i}==0</arg>
<arg>${result}[${i}][0]</arg>
<arg>${tcr_ids},${result}[${i}][0]</arg>
</arguments>
<assign>
<var>${tcr_ids}</var>
</assign>
<msg timestamp="20250905 14:53:48.441" level="INFO">${tcr_ids} = [[1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040]]</msg>
<status status="PASS" starttime="20250905 14:53:48.441" endtime="20250905 14:53:48.441"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:48.440" endtime="20250905 14:53:48.441"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${i}==0</arg>
<arg>${result}[${i}][0]</arg>
<arg>${tcr_ids},${result}[${i}][0]</arg>
</arguments>
<assign>
<var>${tcr_ids}</var>
</assign>
<msg timestamp="20250905 14:53:48.442" level="INFO">${tcr_ids} = [[1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040]],[[1911694241511464960]]</msg>
<status status="PASS" starttime="20250905 14:53:48.441" endtime="20250905 14:53:48.442"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:48.441" endtime="20250905 14:53:48.442"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:48.439" endtime="20250905 14:53:48.442"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count}!=0</arg>
<arg>Evaluate</arg>
<arg>"${tcr_ids}".replace("[", "").replace("]", "")</arg>
<arg>ELSE</arg>
<arg>设置变量</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${transaction_id}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>"${tcr_ids}".replace("[", "").replace("]", "")</arg>
</arguments>
<status status="PASS" starttime="20250905 14:53:48.442" endtime="20250905 14:53:48.443"></status>
</kw>
<msg timestamp="20250905 14:53:48.443" level="INFO">${transaction_id} = 1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040,1911694241511464960</msg>
<status status="PASS" starttime="20250905 14:53:48.442" endtime="20250905 14:53:48.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${transaction_id}</arg>
</arguments>
<msg timestamp="20250905 14:53:48.443" level="INFO">1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040,1911694241511464960</msg>
<status status="PASS" starttime="20250905 14:53:48.443" endtime="20250905 14:53:48.443"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>select count(*) from fc_transaction_chain_rule where shipping_subsidiary_code in ('${start_subsidiary}') and receiving_subsidiary_code='${end_subsidiary}' and UNIX_TIMESTAMP()&lt;end_time and UNIX_TIMESTAMP()&gt;start_time and status=1 and id in (${transaction_id});</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:48.444" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;select count(*) from fc_transaction_chain_rule where shipping_subsidiary_code in ('109') and receiving_subsidiary_code='BO026' and UNIX_TIMESTAMP()&lt;end_time and UNIX_TIMESTAMP()&gt;start_time and status=1 and id in (1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040,1911694241511464960);&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:48.466" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;count(*)&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:48.484" level="INFO">@{result} = [ (1,) ]</msg>
<status status="PASS" starttime="20250905 14:53:48.443" endtime="20250905 14:53:48.484"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${result}[0][0]</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:48.485" level="INFO">${value} = 1</msg>
<status status="PASS" starttime="20250905 14:53:48.485" endtime="20250905 14:53:48.485"></status>
</kw>
<msg timestamp="20250905 14:53:48.486" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20250905 14:53:48.485" endtime="20250905 14:53:48.486"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>select code,levels-&gt;'$[*].pricing_rule_id' from fc_transaction_chain_rule where shipping_subsidiary_code in ('${start_subsidiary}') and receiving_subsidiary_code='${end_subsidiary}' and UNIX_TIMESTAMP()&lt;end_time and UNIX_TIMESTAMP()&gt;start_time and status=1 and id in (${transaction_id});</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:48.486" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;select code,levels-&gt;'$[*].pricing_rule_id' from fc_transaction_chain_rule where shipping_subsidiary_code in ('109') and receiving_subsidiary_code='BO026' and UNIX_TIMESTAMP()&lt;end_time and UNIX_TIMESTAMP()&gt;start_time and status=1 and id in (1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040,1911694241511464960);&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:48.505" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;code&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;levels-&gt;'$[*].pricing_rule_id'&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;TC2025071500000002&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;[1894232905162964992, 1945049439822675968, 0]&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:48.522" level="INFO">@{result} = [ ('TC2025071500000002', '[1894232905162964992, 1945049439822675968, 0]') ]</msg>
<status status="PASS" starttime="20250905 14:53:48.486" endtime="20250905 14:53:48.522"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{code_list}</var>
</assign>
<msg timestamp="20250905 14:53:48.523" level="INFO">@{code_list} = [ ]</msg>
<status status="PASS" starttime="20250905 14:53:48.522" endtime="20250905 14:53:48.523"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{price_rule_list}</var>
</assign>
<msg timestamp="20250905 14:53:48.523" level="INFO">@{price_rule_list} = [ ]</msg>
<status status="PASS" starttime="20250905 14:53:48.523" endtime="20250905 14:53:48.523"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${code_list}</arg>
<arg>${result}[${i}][0]</arg>
</arguments>
<status status="PASS" starttime="20250905 14:53:48.523" endtime="20250905 14:53:48.524"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${price_rule_list}</arg>
<arg>${result}[${i}][1]</arg>
</arguments>
<status status="PASS" starttime="20250905 14:53:48.524" endtime="20250905 14:53:48.524"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:48.523" endtime="20250905 14:53:48.524"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:48.523" endtime="20250905 14:53:48.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${code_list}</arg>
</arguments>
<msg timestamp="20250905 14:53:48.525" level="INFO">['TC2025071500000002']</msg>
<status status="PASS" starttime="20250905 14:53:48.524" endtime="20250905 14:53:48.525"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>{"app_id":"${app_id}[${env}]","app_secret":"${app_secret}[${env}]"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:48.525" level="INFO">${value} = {"app_id":"MFt3lLVxlZfow4xv","app_secret":"SPTB0FU73HA7JwGHRey7iZHd9JTHcgdj"}</msg>
<status status="PASS" starttime="20250905 14:53:48.525" endtime="20250905 14:53:48.525"></status>
</kw>
<msg timestamp="20250905 14:53:48.526" level="INFO">${data} = {"app_id":"MFt3lLVxlZfow4xv","app_secret":"SPTB0FU73HA7JwGHRey7iZHd9JTHcgdj"}</msg>
<status status="PASS" starttime="20250905 14:53:48.525" endtime="20250905 14:53:48.526"></status>
</kw>
<kw name="/open/v1/applications/tokens" library="财税云开放接口">
<doc>接口名称：获取token
接口：/open/v1/applications/tokens</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{header}</var>
</assign>
<msg timestamp="20250905 14:53:48.527" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250905 14:53:48.526" endtime="20250905 14:53:48.527"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>api</arg>
<arg>${fc_url}[${env}]</arg>
<arg>headers=${header}</arg>
<arg>disable_warnings=1</arg>
</arguments>
<msg timestamp="20250905 14:53:48.527" level="INFO">Creating Session using : alias=api, url=https://financial-cloud-service.blueorigin.work, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250905 14:53:48.527" endtime="20250905 14:53:48.528"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<assign>
<var>${data_body}</var>
</assign>
<msg timestamp="20250905 14:53:48.528" level="INFO">${data_body} = {"app_id":"MFt3lLVxlZfow4xv","app_secret":"SPTB0FU73HA7JwGHRey7iZHd9JTHcgdj"}</msg>
<status status="PASS" starttime="20250905 14:53:48.528" endtime="20250905 14:53:48.529"></status>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<arguments>
<arg>api</arg>
<arg>/open/v1/applications/tokens</arg>
<arg>data=${data_body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20250905 14:53:48.639" level="INFO">POST Request : url=https://financial-cloud-service.blueorigin.work/open/v1/applications/tokens 
 path_url=/open/v1/applications/tokens 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body={"app_id":"MFt3lLVxlZfow4xv","app_secret":"SPTB0FU73HA7JwGHRey7iZHd9JTHcgdj"} 
 </msg>
<msg timestamp="20250905 14:53:48.640" level="INFO">POST Response : url=https://financial-cloud-service.blueorigin.work/open/v1/applications/tokens 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Sep 2025 06:53:48 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '130', 'Connection': 'keep-alive', 'X-Request-Id': 'ddc5f6c62f8d81c600d6d3e63558c249', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains'} 
 body={"code":0,"message":"success","data":{"token":"d1009c225d004ce3fdf45b875f716860","app_id":"MFt3lLVxlZfow4xv","expire":1757059978}} 
 </msg>
<msg timestamp="20250905 14:53:48.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250905 14:53:48.529" endtime="20250905 14:53:48.640"></status>
</kw>
<msg timestamp="20250905 14:53:48.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250905 14:53:48.526" endtime="20250905 14:53:48.640"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${response.json()}[data][token]</arg>
</arguments>
<assign>
<var>${Authorization}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:48.642" level="INFO">${value} = d1009c225d004ce3fdf45b875f716860</msg>
<status status="PASS" starttime="20250905 14:53:48.642" endtime="20250905 14:53:48.643"></status>
</kw>
<msg timestamp="20250905 14:53:48.643" level="INFO">${Authorization} = d1009c225d004ce3fdf45b875f716860</msg>
<status status="PASS" starttime="20250905 14:53:48.640" endtime="20250905 14:53:48.643"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>{"delivery_model":14,"start_nodes":[{"supplier_code":"${start_supplier}","purchase_subsidiary_code":"${start_subsidiary}","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_Code":"","store_code":"","customer_code":"${end_customer}"}],"stock_categories":[${stock_categories}]}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:48.643" level="INFO">${value} = {"delivery_model":14,"start_nodes":[{"supplier_code":"SP00002382","purchase_subsidiary_code":"109","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_Co...</msg>
<status status="PASS" starttime="20250905 14:53:48.643" endtime="20250905 14:53:48.643"></status>
</kw>
<msg timestamp="20250905 14:53:48.644" level="INFO">${data} = {"delivery_model":14,"start_nodes":[{"supplier_code":"SP00002382","purchase_subsidiary_code":"109","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_Co...</msg>
<status status="PASS" starttime="20250905 14:53:48.643" endtime="20250905 14:53:48.644"></status>
</kw>
<kw name="/open/v1/transaction-chains/queries" library="财税云开放接口">
<doc>接口名称：交易链路查询接口
接口：/open/v1/transaction-chains/queries</doc>
<arguments>
<arg>${data}</arg>
<arg>${Authorization}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${Authorization}</arg>
</arguments>
<assign>
<var>&amp;{header}</var>
</assign>
<msg timestamp="20250905 14:53:48.645" level="INFO">&amp;{header} = { Content-Type=application/json | Authorization=d1009c225d004ce3fdf45b875f716860 }</msg>
<status status="PASS" starttime="20250905 14:53:48.644" endtime="20250905 14:53:48.645"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>api</arg>
<arg>${fc_url}[${env}]</arg>
<arg>headers=${header}</arg>
<arg>disable_warnings=1</arg>
</arguments>
<msg timestamp="20250905 14:53:48.645" level="INFO">Creating Session using : alias=api, url=https://financial-cloud-service.blueorigin.work, headers={'Content-Type': 'application/json', 'Authorization': 'd1009c225d004ce3fdf45b875f716860'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250905 14:53:48.645" endtime="20250905 14:53:48.646"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<assign>
<var>${data_body}</var>
</assign>
<msg timestamp="20250905 14:53:48.646" level="INFO">${data_body} = {"delivery_model":14,"start_nodes":[{"supplier_code":"SP00002382","purchase_subsidiary_code":"109","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_Co...</msg>
<status status="PASS" starttime="20250905 14:53:48.646" endtime="20250905 14:53:48.646"></status>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<arguments>
<arg>api</arg>
<arg>/open/v1/transaction-chains/queries</arg>
<arg>data=${data_body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20250905 14:53:49.260" level="INFO">POST Request : url=https://financial-cloud-service.blueorigin.work/open/v1/transaction-chains/queries 
 path_url=/open/v1/transaction-chains/queries 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'd1009c225d004ce3fdf45b875f716860', 'Content-Length': '281'} 
 body={"delivery_model":14,"start_nodes":[{"supplier_code":"SP00002382","purchase_subsidiary_code":"109","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_Code":"","store_code":"","customer_code":"CM00000010"}],"stock_categories":[1,2,4]} 
 </msg>
<msg timestamp="20250905 14:53:49.261" level="INFO">POST Response : url=https://financial-cloud-service.blueorigin.work/open/v1/transaction-chains/queries 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Sep 2025 06:53:49 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '388', 'Connection': 'keep-alive', 'X-Request-Id': 'a741475ebd35d0db1634d62c01dadc94', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains'} 
 body={"code":0,"message":"success","data":{"delivery_model":14,"rules":[{"code":"TC2025071500000002-11","name":"109-BO016-BO026","stock_categories":[{"type":2,"priority":1},{"type":4,"priority":1},{"type":1,"priority":1}],"subsidiaries":[{"code":"109","short_name":"KKVI","type":1},{"code":"BO026","short_name":"","type":4}],"extra":{"suppliers":[{"code":"SP00002382"}],"trading_symbol":0}}]}} 
 </msg>
<msg timestamp="20250905 14:53:49.261" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250905 14:53:48.646" endtime="20250905 14:53:49.261"></status>
</kw>
<msg timestamp="20250905 14:53:49.262" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250905 14:53:48.644" endtime="20250905 14:53:49.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20250905 14:53:49.264" level="INFO">{'code': 0, 'message': 'success', 'data': {'delivery_model': 14, 'rules': [{'code': 'TC2025071500000002-11', 'name': '109-BO016-BO026', 'stock_categories': [{'type': 2, 'priority': 1}, {'type': 4, 'priority': 1}, {'type': 1, 'priority': 1}], 'subsidiaries': [{'code': '109', 'short_name': 'KKVI', 'type': 1}, {'code': 'BO026', 'short_name': '', 'type': 4}], 'extra': {'suppliers': [{'code': 'SP00002382'}], 'trading_symbol': 0}}]}}</msg>
<status status="PASS" starttime="20250905 14:53:49.262" endtime="20250905 14:53:49.264"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{intf_code_list}</var>
</assign>
<msg timestamp="20250905 14:53:49.264" level="INFO">@{intf_code_list} = [ ]</msg>
<status status="PASS" starttime="20250905 14:53:49.264" endtime="20250905 14:53:49.264"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${response.json()}[code]==0</arg>
<arg>收集接口返回的交易链路</arg>
<arg>${response}</arg>
<arg>${intf_code_list}</arg>
<arg>ELSE</arg>
<arg>设置变量</arg>
<arg>${intf_code_list}</arg>
</arguments>
<assign>
<var>${intf_code_list}</var>
</assign>
<kw name="收集接口返回的交易链路">
<arguments>
<arg>${response}</arg>
<arg>${intf_code_list}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${response.json()}[data][rules]</arg>
</arguments>
<assign>
<var>${json_len}</var>
</assign>
<msg timestamp="20250905 14:53:49.269" level="INFO">Length is 1</msg>
<msg timestamp="20250905 14:53:49.269" level="INFO">${json_len} = 1</msg>
<status status="PASS" starttime="20250905 14:53:49.267" endtime="20250905 14:53:49.269"></status>
</kw>
<kw name="${i} IN RANGE [ ${json_len} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()}[data][rules][${i}][code]'!='${empty}'</arg>
<arg>Append To List</arg>
<arg>${intf_code_list}</arg>
<arg>${response.json()}[data][rules][${i}][code][:18]</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${intf_code_list}</arg>
<arg>${response.json()}[data][rules][${i}][code][:18]</arg>
</arguments>
<status status="PASS" starttime="20250905 14:53:49.272" endtime="20250905 14:53:49.273"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.269" endtime="20250905 14:53:49.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${intf_code_list}</arg>
</arguments>
<msg timestamp="20250905 14:53:49.274" level="INFO">['TC2025071500000002']</msg>
<status status="PASS" starttime="20250905 14:53:49.273" endtime="20250905 14:53:49.274"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.269" endtime="20250905 14:53:49.274"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.269" endtime="20250905 14:53:49.274"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.266" endtime="20250905 14:53:49.274"></status>
</kw>
<msg timestamp="20250905 14:53:49.274" level="INFO">${intf_code_list} = ['TC2025071500000002']</msg>
<status status="PASS" starttime="20250905 14:53:49.264" endtime="20250905 14:53:49.274"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>sorted(${code_list})</arg>
</arguments>
<assign>
<var>${code_list}</var>
</assign>
<msg timestamp="20250905 14:53:49.275" level="INFO">${code_list} = ['TC2025071500000002']</msg>
<status status="PASS" starttime="20250905 14:53:49.274" endtime="20250905 14:53:49.275"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>sorted(${intf_code_list})</arg>
</arguments>
<assign>
<var>${intf_code_list}</var>
</assign>
<msg timestamp="20250905 14:53:49.275" level="INFO">${intf_code_list} = ['TC2025071500000002']</msg>
<status status="PASS" starttime="20250905 14:53:49.275" endtime="20250905 14:53:49.275"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${code_list}</arg>
<arg>${intf_code_list}</arg>
</arguments>
<status status="PASS" starttime="20250905 14:53:49.275" endtime="20250905 14:53:49.275"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:48.039" endtime="20250905 14:53:49.275"></status>
</kw>
<kw name="本地供应商到客关键字">
<arguments>
<arg>SP00000021</arg>
<arg>BO002</arg>
<arg>CM00000003</arg>
<arg>1,2,4</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.loads('''${warehouse_subsidiary}''')</arg>
</arguments>
<assign>
<var>${warehouse_subsidiary_dict}</var>
</assign>
<msg timestamp="20250905 14:53:49.275" level="INFO">${warehouse_subsidiary_dict} = {'KH01PP': 'BO015', 'CN01SZ-CAM': 'BO002', 'CN01SZ-ID': 'BO002', 'CN01SZ-MY': 'BO002', 'CN01SZ-SG': 'BO002', 'CN01SZ-TH': 'BO002', 'CN01SZ-VN': 'BO002', 'ID03TGR': ['PT001', '109', 'BO005', 'BO004', '...</msg>
<status status="PASS" starttime="20250905 14:53:49.275" endtime="20250905 14:53:49.275"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>select subject_code from dim.dim_retail_public_sc_customer_df where customer_code='${end_customer}';</arg>
<arg>alias=dw</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:49.276" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;select subject_code from dim.dim_retail_public_sc_customer_df where customer_code='CM00000003';&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:49.406" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;subject_code&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;109&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:49.425" level="INFO">@{result} = [ ('109',) ]</msg>
<status status="PASS" starttime="20250905 14:53:49.275" endtime="20250905 14:53:49.425"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${result}[0][0]</arg>
</arguments>
<assign>
<var>${end_subsidiary}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:49.426" level="INFO">${value} = 109</msg>
<status status="PASS" starttime="20250905 14:53:49.426" endtime="20250905 14:53:49.426"></status>
</kw>
<msg timestamp="20250905 14:53:49.426" level="INFO">${end_subsidiary} = 109</msg>
<status status="PASS" starttime="20250905 14:53:49.425" endtime="20250905 14:53:49.427"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>SELECT count(*) from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_rule_id where tmr.delivery_model =14 and tmr.status=1 and UNIX_TIMESTAMP()&lt;tmr.end_time and UNIX_TIMESTAMP()&gt;tmr.start_time and tmrd.start_node in ('${start_supplier}','all') and tmrd.end_node in ('all','${end_customer}');</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:49.427" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT count(*) from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_rule_id where tmr.delivery_model =14 and tmr.status=1 and UNIX_TIMESTAMP()&lt;tmr.end_time and UNIX_TIMESTAMP()&gt;tmr.start_time and tmrd.start_node in ('SP00000021','all') and tmrd.end_node in ('all','CM00000003');&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:49.444" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;count(*)&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:49.466" level="INFO">@{result} = [ (1,) ]</msg>
<status status="PASS" starttime="20250905 14:53:49.427" endtime="20250905 14:53:49.466"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${result}[0][0]</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:49.467" level="INFO">${value} = 1</msg>
<status status="PASS" starttime="20250905 14:53:49.467" endtime="20250905 14:53:49.467"></status>
</kw>
<msg timestamp="20250905 14:53:49.468" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20250905 14:53:49.466" endtime="20250905 14:53:49.468"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${count}==0</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${MatchRule}</var>
</assign>
<msg timestamp="20250905 14:53:49.468" level="INFO">${MatchRule} = 1</msg>
<status status="PASS" starttime="20250905 14:53:49.468" endtime="20250905 14:53:49.468"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>SELECT tmr.rule_configs-&gt;'$[*].tcr_ids',tmrd.start_node ,tmrd.end_node from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_rule_id where tmr.delivery_model =14 and tmr.status=1 and UNIX_TIMESTAMP()&lt;tmr.end_time and UNIX_TIMESTAMP()&gt;tmr.start_time and tmrd.start_node in ('${start_supplier}','all') and tmrd.end_node in ('all','${end_customer}')</arg>
</arguments>
<assign>
<var>${tmr_sql}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:49.469" level="INFO">${value} = SELECT tmr.rule_configs-&gt;'$[*].tcr_ids',tmrd.start_node ,tmrd.end_node from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_...</msg>
<status status="PASS" starttime="20250905 14:53:49.469" endtime="20250905 14:53:49.469"></status>
</kw>
<msg timestamp="20250905 14:53:49.470" level="INFO">${tmr_sql} = SELECT tmr.rule_configs-&gt;'$[*].tcr_ids',tmrd.start_node ,tmrd.end_node from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_...</msg>
<status status="PASS" starttime="20250905 14:53:49.468" endtime="20250905 14:53:49.470"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>${tmr_sql}</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:49.470" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT tmr.rule_configs-&gt;'$[*].tcr_ids',tmrd.start_node ,tmrd.end_node from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_rule_id where tmr.delivery_model =14 and tmr.status=1 and UNIX_TIMESTAMP()&lt;tmr.end_time and UNIX_TIMESTAMP()&gt;tmr.start_time and tmrd.start_node in ('SP00000021','all') and tmrd.end_node in ('all','CM00000003')&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:49.487" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tmr.rule_configs-&gt;'$[*].tcr_ids'&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;start_node&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;end_node&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;[[1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040]]&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;all&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;all&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:49.553" level="INFO">@{result} = [ ('[[1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040]]', 'all', 'all') ]</msg>
<status status="PASS" starttime="20250905 14:53:49.470" endtime="20250905 14:53:49.553"></status>
</kw>
<kw name="${i} IN RANGE [ ${count} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${i}==0</arg>
<arg>${result}[${i}][0]</arg>
<arg>${tcr_ids},${result}[${i}][0]</arg>
</arguments>
<assign>
<var>${tcr_ids}</var>
</assign>
<msg timestamp="20250905 14:53:49.554" level="INFO">${tcr_ids} = [[1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040]]</msg>
<status status="PASS" starttime="20250905 14:53:49.554" endtime="20250905 14:53:49.554"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.554" endtime="20250905 14:53:49.555"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.553" endtime="20250905 14:53:49.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count}!=0</arg>
<arg>Evaluate</arg>
<arg>"${tcr_ids}".replace("[", "").replace("]", "")</arg>
<arg>ELSE</arg>
<arg>设置变量</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${transaction_id}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>"${tcr_ids}".replace("[", "").replace("]", "")</arg>
</arguments>
<status status="PASS" starttime="20250905 14:53:49.555" endtime="20250905 14:53:49.556"></status>
</kw>
<msg timestamp="20250905 14:53:49.556" level="INFO">${transaction_id} = 1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040</msg>
<status status="PASS" starttime="20250905 14:53:49.555" endtime="20250905 14:53:49.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${transaction_id}</arg>
</arguments>
<msg timestamp="20250905 14:53:49.556" level="INFO">1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040</msg>
<status status="PASS" starttime="20250905 14:53:49.556" endtime="20250905 14:53:49.556"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>select count(*) from fc_transaction_chain_rule where shipping_subsidiary_code in ('${start_subsidiary}') and receiving_subsidiary_code='${end_subsidiary}' and UNIX_TIMESTAMP()&lt;end_time and UNIX_TIMESTAMP()&gt;start_time and status=1 and id in (${transaction_id});</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:49.557" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;select count(*) from fc_transaction_chain_rule where shipping_subsidiary_code in ('BO002') and receiving_subsidiary_code='109' and UNIX_TIMESTAMP()&lt;end_time and UNIX_TIMESTAMP()&gt;start_time and status=1 and id in (1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040);&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:49.586" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;count(*)&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:49.605" level="INFO">@{result} = [ (1,) ]</msg>
<status status="PASS" starttime="20250905 14:53:49.556" endtime="20250905 14:53:49.606"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${result}[0][0]</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:49.607" level="INFO">${value} = 1</msg>
<status status="PASS" starttime="20250905 14:53:49.607" endtime="20250905 14:53:49.607"></status>
</kw>
<msg timestamp="20250905 14:53:49.608" level="INFO">${length} = 1</msg>
<status status="PASS" starttime="20250905 14:53:49.606" endtime="20250905 14:53:49.608"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>select code,levels-&gt;'$[*].pricing_rule_id' from fc_transaction_chain_rule where shipping_subsidiary_code in ('${start_subsidiary}') and receiving_subsidiary_code='${end_subsidiary}' and UNIX_TIMESTAMP()&lt;end_time and UNIX_TIMESTAMP()&gt;start_time and status=1 and id in (${transaction_id});</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:49.608" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;select code,levels-&gt;'$[*].pricing_rule_id' from fc_transaction_chain_rule where shipping_subsidiary_code in ('BO002') and receiving_subsidiary_code='109' and UNIX_TIMESTAMP()&lt;end_time and UNIX_TIMESTAMP()&gt;start_time and status=1 and id in (1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040);&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:49.633" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;code&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;levels-&gt;'$[*].pricing_rule_id'&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;TC2025061600000001&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;[1894269404445163520, 1896481913122185216, 0]&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:49.649" level="INFO">@{result} = [ ('TC2025061600000001', '[1894269404445163520, 1896481913122185216, 0]') ]</msg>
<status status="PASS" starttime="20250905 14:53:49.608" endtime="20250905 14:53:49.649"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{code_list}</var>
</assign>
<msg timestamp="20250905 14:53:49.650" level="INFO">@{code_list} = [ ]</msg>
<status status="PASS" starttime="20250905 14:53:49.650" endtime="20250905 14:53:49.650"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{price_rule_list}</var>
</assign>
<msg timestamp="20250905 14:53:49.650" level="INFO">@{price_rule_list} = [ ]</msg>
<status status="PASS" starttime="20250905 14:53:49.650" endtime="20250905 14:53:49.650"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${code_list}</arg>
<arg>${result}[${i}][0]</arg>
</arguments>
<status status="PASS" starttime="20250905 14:53:49.651" endtime="20250905 14:53:49.651"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${price_rule_list}</arg>
<arg>${result}[${i}][1]</arg>
</arguments>
<status status="PASS" starttime="20250905 14:53:49.651" endtime="20250905 14:53:49.651"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.651" endtime="20250905 14:53:49.651"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.650" endtime="20250905 14:53:49.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${code_list}</arg>
</arguments>
<msg timestamp="20250905 14:53:49.652" level="INFO">['TC2025061600000001']</msg>
<status status="PASS" starttime="20250905 14:53:49.651" endtime="20250905 14:53:49.652"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>{"app_id":"${app_id}[${env}]","app_secret":"${app_secret}[${env}]"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:49.653" level="INFO">${value} = {"app_id":"MFt3lLVxlZfow4xv","app_secret":"SPTB0FU73HA7JwGHRey7iZHd9JTHcgdj"}</msg>
<status status="PASS" starttime="20250905 14:53:49.652" endtime="20250905 14:53:49.653"></status>
</kw>
<msg timestamp="20250905 14:53:49.653" level="INFO">${data} = {"app_id":"MFt3lLVxlZfow4xv","app_secret":"SPTB0FU73HA7JwGHRey7iZHd9JTHcgdj"}</msg>
<status status="PASS" starttime="20250905 14:53:49.652" endtime="20250905 14:53:49.653"></status>
</kw>
<kw name="/open/v1/applications/tokens" library="财税云开放接口">
<doc>接口名称：获取token
接口：/open/v1/applications/tokens</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{header}</var>
</assign>
<msg timestamp="20250905 14:53:49.654" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250905 14:53:49.653" endtime="20250905 14:53:49.654"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>api</arg>
<arg>${fc_url}[${env}]</arg>
<arg>headers=${header}</arg>
<arg>disable_warnings=1</arg>
</arguments>
<msg timestamp="20250905 14:53:49.655" level="INFO">Creating Session using : alias=api, url=https://financial-cloud-service.blueorigin.work, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250905 14:53:49.654" endtime="20250905 14:53:49.656"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<assign>
<var>${data_body}</var>
</assign>
<msg timestamp="20250905 14:53:49.656" level="INFO">${data_body} = {"app_id":"MFt3lLVxlZfow4xv","app_secret":"SPTB0FU73HA7JwGHRey7iZHd9JTHcgdj"}</msg>
<status status="PASS" starttime="20250905 14:53:49.656" endtime="20250905 14:53:49.656"></status>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<arguments>
<arg>api</arg>
<arg>/open/v1/applications/tokens</arg>
<arg>data=${data_body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20250905 14:53:49.751" level="INFO">POST Request : url=https://financial-cloud-service.blueorigin.work/open/v1/applications/tokens 
 path_url=/open/v1/applications/tokens 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body={"app_id":"MFt3lLVxlZfow4xv","app_secret":"SPTB0FU73HA7JwGHRey7iZHd9JTHcgdj"} 
 </msg>
<msg timestamp="20250905 14:53:49.752" level="INFO">POST Response : url=https://financial-cloud-service.blueorigin.work/open/v1/applications/tokens 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Sep 2025 06:53:49 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '130', 'Connection': 'keep-alive', 'X-Request-Id': 'b872e59322f4094e18360e68659f46b4', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains'} 
 body={"code":0,"message":"success","data":{"token":"d1009c225d004ce3fdf45b875f716860","app_id":"MFt3lLVxlZfow4xv","expire":1757059978}} 
 </msg>
<msg timestamp="20250905 14:53:49.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250905 14:53:49.656" endtime="20250905 14:53:49.752"></status>
</kw>
<msg timestamp="20250905 14:53:49.752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250905 14:53:49.653" endtime="20250905 14:53:49.752"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${response.json()}[data][token]</arg>
</arguments>
<assign>
<var>${Authorization}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:49.755" level="INFO">${value} = d1009c225d004ce3fdf45b875f716860</msg>
<status status="PASS" starttime="20250905 14:53:49.754" endtime="20250905 14:53:49.755"></status>
</kw>
<msg timestamp="20250905 14:53:49.755" level="INFO">${Authorization} = d1009c225d004ce3fdf45b875f716860</msg>
<status status="PASS" starttime="20250905 14:53:49.752" endtime="20250905 14:53:49.755"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>{"delivery_model":14,"start_nodes":[{"supplier_code":"${start_supplier}","purchase_subsidiary_code":"${start_subsidiary}","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_Code":"","store_code":"","customer_code":"${end_customer}"}],"stock_categories":[${stock_categories}]}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:49.756" level="INFO">${value} = {"delivery_model":14,"start_nodes":[{"supplier_code":"SP00000021","purchase_subsidiary_code":"BO002","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_...</msg>
<status status="PASS" starttime="20250905 14:53:49.755" endtime="20250905 14:53:49.756"></status>
</kw>
<msg timestamp="20250905 14:53:49.756" level="INFO">${data} = {"delivery_model":14,"start_nodes":[{"supplier_code":"SP00000021","purchase_subsidiary_code":"BO002","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_...</msg>
<status status="PASS" starttime="20250905 14:53:49.755" endtime="20250905 14:53:49.756"></status>
</kw>
<kw name="/open/v1/transaction-chains/queries" library="财税云开放接口">
<doc>接口名称：交易链路查询接口
接口：/open/v1/transaction-chains/queries</doc>
<arguments>
<arg>${data}</arg>
<arg>${Authorization}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${Authorization}</arg>
</arguments>
<assign>
<var>&amp;{header}</var>
</assign>
<msg timestamp="20250905 14:53:49.757" level="INFO">&amp;{header} = { Content-Type=application/json | Authorization=d1009c225d004ce3fdf45b875f716860 }</msg>
<status status="PASS" starttime="20250905 14:53:49.756" endtime="20250905 14:53:49.757"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>api</arg>
<arg>${fc_url}[${env}]</arg>
<arg>headers=${header}</arg>
<arg>disable_warnings=1</arg>
</arguments>
<msg timestamp="20250905 14:53:49.758" level="INFO">Creating Session using : alias=api, url=https://financial-cloud-service.blueorigin.work, headers={'Content-Type': 'application/json', 'Authorization': 'd1009c225d004ce3fdf45b875f716860'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250905 14:53:49.757" endtime="20250905 14:53:49.758"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<assign>
<var>${data_body}</var>
</assign>
<msg timestamp="20250905 14:53:49.758" level="INFO">${data_body} = {"delivery_model":14,"start_nodes":[{"supplier_code":"SP00000021","purchase_subsidiary_code":"BO002","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_...</msg>
<status status="PASS" starttime="20250905 14:53:49.758" endtime="20250905 14:53:49.758"></status>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<arguments>
<arg>api</arg>
<arg>/open/v1/transaction-chains/queries</arg>
<arg>data=${data_body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20250905 14:53:49.974" level="INFO">POST Request : url=https://financial-cloud-service.blueorigin.work/open/v1/transaction-chains/queries 
 path_url=/open/v1/transaction-chains/queries 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'd1009c225d004ce3fdf45b875f716860', 'Content-Length': '283'} 
 body={"delivery_model":14,"start_nodes":[{"supplier_code":"SP00000021","purchase_subsidiary_code":"BO002","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_Code":"","store_code":"","customer_code":"CM00000003"}],"stock_categories":[1,2,4]} 
 </msg>
<msg timestamp="20250905 14:53:49.974" level="INFO">POST Response : url=https://financial-cloud-service.blueorigin.work/open/v1/transaction-chains/queries 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Sep 2025 06:53:50 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '477', 'Connection': 'keep-alive', 'X-Request-Id': '47ff0eb50cc710800109f08c1b668ff3', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains'} 
 body={"code":0,"message":"success","data":{"delivery_model":14,"rules":[{"code":"TC2025061600000001-6","name":"BO-BOM-KKVI","stock_categories":[{"type":1,"priority":1},{"type":2,"priority":1},{"type":4,"priority":1}],"subsidiaries":[{"code":"BO002","short_name":"GDSC","type":1},{"code":"BO002","short_name":"GDSC","type":2},{"code":"109","short_name":"KKVI","type":3},{"code":"109","short_name":"KKVI","type":4}],"extra":{"suppliers":[{"code":"SP00000021"}],"trading_symbol":0}}]}} 
 </msg>
<msg timestamp="20250905 14:53:49.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250905 14:53:49.758" endtime="20250905 14:53:49.974"></status>
</kw>
<msg timestamp="20250905 14:53:49.975" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250905 14:53:49.756" endtime="20250905 14:53:49.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20250905 14:53:49.977" level="INFO">{'code': 0, 'message': 'success', 'data': {'delivery_model': 14, 'rules': [{'code': 'TC2025061600000001-6', 'name': 'BO-BOM-KKVI', 'stock_categories': [{'type': 1, 'priority': 1}, {'type': 2, 'priority': 1}, {'type': 4, 'priority': 1}], 'subsidiaries': [{'code': 'BO002', 'short_name': 'GDSC', 'type': 1}, {'code': 'BO002', 'short_name': 'GDSC', 'type': 2}, {'code': '109', 'short_name': 'KKVI', 'type': 3}, {'code': '109', 'short_name': 'KKVI', 'type': 4}], 'extra': {'suppliers': [{'code': 'SP00000021'}], 'trading_symbol': 0}}]}}</msg>
<status status="PASS" starttime="20250905 14:53:49.975" endtime="20250905 14:53:49.977"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{intf_code_list}</var>
</assign>
<msg timestamp="20250905 14:53:49.978" level="INFO">@{intf_code_list} = [ ]</msg>
<status status="PASS" starttime="20250905 14:53:49.978" endtime="20250905 14:53:49.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${response.json()}[code]==0</arg>
<arg>收集接口返回的交易链路</arg>
<arg>${response}</arg>
<arg>${intf_code_list}</arg>
<arg>ELSE</arg>
<arg>设置变量</arg>
<arg>${intf_code_list}</arg>
</arguments>
<assign>
<var>${intf_code_list}</var>
</assign>
<kw name="收集接口返回的交易链路">
<arguments>
<arg>${response}</arg>
<arg>${intf_code_list}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${response.json()}[data][rules]</arg>
</arguments>
<assign>
<var>${json_len}</var>
</assign>
<msg timestamp="20250905 14:53:49.982" level="INFO">Length is 1</msg>
<msg timestamp="20250905 14:53:49.982" level="INFO">${json_len} = 1</msg>
<status status="PASS" starttime="20250905 14:53:49.980" endtime="20250905 14:53:49.982"></status>
</kw>
<kw name="${i} IN RANGE [ ${json_len} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${response.json()}[data][rules][${i}][code]'!='${empty}'</arg>
<arg>Append To List</arg>
<arg>${intf_code_list}</arg>
<arg>${response.json()}[data][rules][${i}][code][:18]</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${intf_code_list}</arg>
<arg>${response.json()}[data][rules][${i}][code][:18]</arg>
</arguments>
<status status="PASS" starttime="20250905 14:53:49.985" endtime="20250905 14:53:49.986"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.982" endtime="20250905 14:53:49.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${intf_code_list}</arg>
</arguments>
<msg timestamp="20250905 14:53:49.987" level="INFO">['TC2025061600000001']</msg>
<status status="PASS" starttime="20250905 14:53:49.987" endtime="20250905 14:53:49.987"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.982" endtime="20250905 14:53:49.987"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.982" endtime="20250905 14:53:49.987"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.980" endtime="20250905 14:53:49.987"></status>
</kw>
<msg timestamp="20250905 14:53:49.987" level="INFO">${intf_code_list} = ['TC2025061600000001']</msg>
<status status="PASS" starttime="20250905 14:53:49.978" endtime="20250905 14:53:49.987"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>sorted(${code_list})</arg>
</arguments>
<assign>
<var>${code_list}</var>
</assign>
<msg timestamp="20250905 14:53:49.988" level="INFO">${code_list} = ['TC2025061600000001']</msg>
<status status="PASS" starttime="20250905 14:53:49.987" endtime="20250905 14:53:49.988"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>sorted(${intf_code_list})</arg>
</arguments>
<assign>
<var>${intf_code_list}</var>
</assign>
<msg timestamp="20250905 14:53:49.988" level="INFO">${intf_code_list} = ['TC2025061600000001']</msg>
<status status="PASS" starttime="20250905 14:53:49.988" endtime="20250905 14:53:49.988"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${code_list}</arg>
<arg>${intf_code_list}</arg>
</arguments>
<status status="PASS" starttime="20250905 14:53:49.988" endtime="20250905 14:53:49.989"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.275" endtime="20250905 14:53:49.989"></status>
</kw>
<kw name="本地供应商到客关键字">
<arguments>
<arg>SP00000021</arg>
<arg>PT001</arg>
<arg>CM00000001</arg>
<arg>1,2</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.loads('''${warehouse_subsidiary}''')</arg>
</arguments>
<assign>
<var>${warehouse_subsidiary_dict}</var>
</assign>
<msg timestamp="20250905 14:53:49.989" level="INFO">${warehouse_subsidiary_dict} = {'KH01PP': 'BO015', 'CN01SZ-CAM': 'BO002', 'CN01SZ-ID': 'BO002', 'CN01SZ-MY': 'BO002', 'CN01SZ-SG': 'BO002', 'CN01SZ-TH': 'BO002', 'CN01SZ-VN': 'BO002', 'ID03TGR': ['PT001', '109', 'BO005', 'BO004', '...</msg>
<status status="PASS" starttime="20250905 14:53:49.989" endtime="20250905 14:53:49.989"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>select subject_code from dim.dim_retail_public_sc_customer_df where customer_code='${end_customer}';</arg>
<arg>alias=dw</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:49.989" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;select subject_code from dim.dim_retail_public_sc_customer_df where customer_code='CM00000001';&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:50.135" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;subject_code&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;BO037&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:50.188" level="INFO">@{result} = [ ('BO037',) ]</msg>
<status status="PASS" starttime="20250905 14:53:49.989" endtime="20250905 14:53:50.188"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${result}[0][0]</arg>
</arguments>
<assign>
<var>${end_subsidiary}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:50.189" level="INFO">${value} = BO037</msg>
<status status="PASS" starttime="20250905 14:53:50.189" endtime="20250905 14:53:50.190"></status>
</kw>
<msg timestamp="20250905 14:53:50.190" level="INFO">${end_subsidiary} = BO037</msg>
<status status="PASS" starttime="20250905 14:53:50.188" endtime="20250905 14:53:50.190"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>SELECT count(*) from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_rule_id where tmr.delivery_model =14 and tmr.status=1 and UNIX_TIMESTAMP()&lt;tmr.end_time and UNIX_TIMESTAMP()&gt;tmr.start_time and tmrd.start_node in ('${start_supplier}','all') and tmrd.end_node in ('all','${end_customer}');</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:50.191" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT count(*) from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_rule_id where tmr.delivery_model =14 and tmr.status=1 and UNIX_TIMESTAMP()&lt;tmr.end_time and UNIX_TIMESTAMP()&gt;tmr.start_time and tmrd.start_node in ('SP00000021','all') and tmrd.end_node in ('all','CM00000001');&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:50.209" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;count(*)&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:50.225" level="INFO">@{result} = [ (1,) ]</msg>
<status status="PASS" starttime="20250905 14:53:50.190" endtime="20250905 14:53:50.225"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${result}[0][0]</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:50.226" level="INFO">${value} = 1</msg>
<status status="PASS" starttime="20250905 14:53:50.225" endtime="20250905 14:53:50.226"></status>
</kw>
<msg timestamp="20250905 14:53:50.226" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20250905 14:53:50.225" endtime="20250905 14:53:50.226"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${count}==0</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${MatchRule}</var>
</assign>
<msg timestamp="20250905 14:53:50.227" level="INFO">${MatchRule} = 1</msg>
<status status="PASS" starttime="20250905 14:53:50.226" endtime="20250905 14:53:50.227"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>SELECT tmr.rule_configs-&gt;'$[*].tcr_ids',tmrd.start_node ,tmrd.end_node from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_rule_id where tmr.delivery_model =14 and tmr.status=1 and UNIX_TIMESTAMP()&lt;tmr.end_time and UNIX_TIMESTAMP()&gt;tmr.start_time and tmrd.start_node in ('${start_supplier}','all') and tmrd.end_node in ('all','${end_customer}')</arg>
</arguments>
<assign>
<var>${tmr_sql}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:50.227" level="INFO">${value} = SELECT tmr.rule_configs-&gt;'$[*].tcr_ids',tmrd.start_node ,tmrd.end_node from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_...</msg>
<status status="PASS" starttime="20250905 14:53:50.227" endtime="20250905 14:53:50.227"></status>
</kw>
<msg timestamp="20250905 14:53:50.228" level="INFO">${tmr_sql} = SELECT tmr.rule_configs-&gt;'$[*].tcr_ids',tmrd.start_node ,tmrd.end_node from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_...</msg>
<status status="PASS" starttime="20250905 14:53:50.227" endtime="20250905 14:53:50.228"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>${tmr_sql}</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:50.228" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT tmr.rule_configs-&gt;'$[*].tcr_ids',tmrd.start_node ,tmrd.end_node from fc_transaction_matching_rule tmr join fc_transaction_matching_rule_delivery_node tmrd on tmr.id = tmrd.transaction_matching_rule_id where tmr.delivery_model =14 and tmr.status=1 and UNIX_TIMESTAMP()&lt;tmr.end_time and UNIX_TIMESTAMP()&gt;tmr.start_time and tmrd.start_node in ('SP00000021','all') and tmrd.end_node in ('all','CM00000001')&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:50.247" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tmr.rule_configs-&gt;'$[*].tcr_ids'&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;start_node&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;end_node&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;[[1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040]]&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;all&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;all&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:50.265" level="INFO">@{result} = [ ('[[1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040]]', 'all', 'all') ]</msg>
<status status="PASS" starttime="20250905 14:53:50.228" endtime="20250905 14:53:50.265"></status>
</kw>
<kw name="${i} IN RANGE [ ${count} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${i}==0</arg>
<arg>${result}[${i}][0]</arg>
<arg>${tcr_ids},${result}[${i}][0]</arg>
</arguments>
<assign>
<var>${tcr_ids}</var>
</assign>
<msg timestamp="20250905 14:53:50.266" level="INFO">${tcr_ids} = [[1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040]]</msg>
<status status="PASS" starttime="20250905 14:53:50.266" endtime="20250905 14:53:50.266"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:50.265" endtime="20250905 14:53:50.266"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:50.265" endtime="20250905 14:53:50.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count}!=0</arg>
<arg>Evaluate</arg>
<arg>"${tcr_ids}".replace("[", "").replace("]", "")</arg>
<arg>ELSE</arg>
<arg>设置变量</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${transaction_id}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>"${tcr_ids}".replace("[", "").replace("]", "")</arg>
</arguments>
<status status="PASS" starttime="20250905 14:53:50.267" endtime="20250905 14:53:50.267"></status>
</kw>
<msg timestamp="20250905 14:53:50.267" level="INFO">${transaction_id} = 1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040</msg>
<status status="PASS" starttime="20250905 14:53:50.267" endtime="20250905 14:53:50.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${transaction_id}</arg>
</arguments>
<msg timestamp="20250905 14:53:50.267" level="INFO">1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040</msg>
<status status="PASS" starttime="20250905 14:53:50.267" endtime="20250905 14:53:50.268"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>select count(*) from fc_transaction_chain_rule where shipping_subsidiary_code in ('${start_subsidiary}') and receiving_subsidiary_code='${end_subsidiary}' and UNIX_TIMESTAMP()&lt;end_time and UNIX_TIMESTAMP()&gt;start_time and status=1 and id in (${transaction_id});</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:50.268" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;select count(*) from fc_transaction_chain_rule where shipping_subsidiary_code in ('PT001') and receiving_subsidiary_code='BO037' and UNIX_TIMESTAMP()&lt;end_time and UNIX_TIMESTAMP()&gt;start_time and status=1 and id in (1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040);&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:50.286" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;count(*)&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:50.310" level="INFO">@{result} = [ (0,) ]</msg>
<status status="PASS" starttime="20250905 14:53:50.268" endtime="20250905 14:53:50.310"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${result}[0][0]</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:50.311" level="INFO">${value} = 0</msg>
<status status="PASS" starttime="20250905 14:53:50.311" endtime="20250905 14:53:50.311"></status>
</kw>
<msg timestamp="20250905 14:53:50.312" level="INFO">${length} = 0</msg>
<status status="PASS" starttime="20250905 14:53:50.310" endtime="20250905 14:53:50.312"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<arguments>
<arg>select code,levels-&gt;'$[*].pricing_rule_id' from fc_transaction_chain_rule where shipping_subsidiary_code in ('${start_subsidiary}') and receiving_subsidiary_code='${end_subsidiary}' and UNIX_TIMESTAMP()&lt;end_time and UNIX_TIMESTAMP()&gt;start_time and status=1 and id in (${transaction_id});</arg>
</arguments>
<assign>
<var>@{result}</var>
</assign>
<msg timestamp="20250905 14:53:50.312" level="INFO" html="yes">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;select code,levels-&gt;'$[*].pricing_rule_id' from fc_transaction_chain_rule where shipping_subsidiary_code in ('PT001') and receiving_subsidiary_code='BO037' and UNIX_TIMESTAMP()&lt;end_time and UNIX_TIMESTAMP()&gt;start_time and status=1 and id in (1945042677455388672, 1945049799593295872, 1934508012515930112, 1912402649848090624, 1912401688530391040);&lt;/code&gt;</msg>
<msg timestamp="20250905 14:53:50.347" level="INFO" html="yes">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 0 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;code&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;levels-&gt;'$[*].pricing_rule_id'&lt;/th&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg timestamp="20250905 14:53:50.363" level="INFO">@{result} = [ ]</msg>
<status status="PASS" starttime="20250905 14:53:50.312" endtime="20250905 14:53:50.363"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{code_list}</var>
</assign>
<msg timestamp="20250905 14:53:50.364" level="INFO">@{code_list} = [ ]</msg>
<status status="PASS" starttime="20250905 14:53:50.364" endtime="20250905 14:53:50.364"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{price_rule_list}</var>
</assign>
<msg timestamp="20250905 14:53:50.365" level="INFO">@{price_rule_list} = [ ]</msg>
<status status="PASS" starttime="20250905 14:53:50.364" endtime="20250905 14:53:50.365"></status>
</kw>
<kw name="${i} IN RANGE [ ${length} ]" type="for">
<status status="PASS" starttime="20250905 14:53:50.365" endtime="20250905 14:53:50.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${code_list}</arg>
</arguments>
<msg timestamp="20250905 14:53:50.366" level="INFO">[]</msg>
<status status="PASS" starttime="20250905 14:53:50.365" endtime="20250905 14:53:50.366"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>{"app_id":"${app_id}[${env}]","app_secret":"${app_secret}[${env}]"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:50.366" level="INFO">${value} = {"app_id":"MFt3lLVxlZfow4xv","app_secret":"SPTB0FU73HA7JwGHRey7iZHd9JTHcgdj"}</msg>
<status status="PASS" starttime="20250905 14:53:50.366" endtime="20250905 14:53:50.366"></status>
</kw>
<msg timestamp="20250905 14:53:50.367" level="INFO">${data} = {"app_id":"MFt3lLVxlZfow4xv","app_secret":"SPTB0FU73HA7JwGHRey7iZHd9JTHcgdj"}</msg>
<status status="PASS" starttime="20250905 14:53:50.366" endtime="20250905 14:53:50.367"></status>
</kw>
<kw name="/open/v1/applications/tokens" library="财税云开放接口">
<doc>接口名称：获取token
接口：/open/v1/applications/tokens</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{header}</var>
</assign>
<msg timestamp="20250905 14:53:50.368" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20250905 14:53:50.367" endtime="20250905 14:53:50.368"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>api</arg>
<arg>${fc_url}[${env}]</arg>
<arg>headers=${header}</arg>
<arg>disable_warnings=1</arg>
</arguments>
<msg timestamp="20250905 14:53:50.368" level="INFO">Creating Session using : alias=api, url=https://financial-cloud-service.blueorigin.work, headers={'Content-Type': 'application/json'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250905 14:53:50.368" endtime="20250905 14:53:50.369"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<assign>
<var>${data_body}</var>
</assign>
<msg timestamp="20250905 14:53:50.369" level="INFO">${data_body} = {"app_id":"MFt3lLVxlZfow4xv","app_secret":"SPTB0FU73HA7JwGHRey7iZHd9JTHcgdj"}</msg>
<status status="PASS" starttime="20250905 14:53:50.369" endtime="20250905 14:53:50.369"></status>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<arguments>
<arg>api</arg>
<arg>/open/v1/applications/tokens</arg>
<arg>data=${data_body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20250905 14:53:50.461" level="INFO">POST Request : url=https://financial-cloud-service.blueorigin.work/open/v1/applications/tokens 
 path_url=/open/v1/applications/tokens 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '77'} 
 body={"app_id":"MFt3lLVxlZfow4xv","app_secret":"SPTB0FU73HA7JwGHRey7iZHd9JTHcgdj"} 
 </msg>
<msg timestamp="20250905 14:53:50.461" level="INFO">POST Response : url=https://financial-cloud-service.blueorigin.work/open/v1/applications/tokens 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Sep 2025 06:53:50 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '130', 'Connection': 'keep-alive', 'X-Request-Id': '1e6e017417645879a472c75f6007a7cf', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains'} 
 body={"code":0,"message":"success","data":{"token":"d1009c225d004ce3fdf45b875f716860","app_id":"MFt3lLVxlZfow4xv","expire":1757059978}} 
 </msg>
<msg timestamp="20250905 14:53:50.462" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250905 14:53:50.369" endtime="20250905 14:53:50.462"></status>
</kw>
<msg timestamp="20250905 14:53:50.462" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250905 14:53:50.367" endtime="20250905 14:53:50.462"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${response.json()}[data][token]</arg>
</arguments>
<assign>
<var>${Authorization}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:50.465" level="INFO">${value} = d1009c225d004ce3fdf45b875f716860</msg>
<status status="PASS" starttime="20250905 14:53:50.464" endtime="20250905 14:53:50.465"></status>
</kw>
<msg timestamp="20250905 14:53:50.465" level="INFO">${Authorization} = d1009c225d004ce3fdf45b875f716860</msg>
<status status="PASS" starttime="20250905 14:53:50.462" endtime="20250905 14:53:50.465"></status>
</kw>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>{"delivery_model":14,"start_nodes":[{"supplier_code":"${start_supplier}","purchase_subsidiary_code":"${start_subsidiary}","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_Code":"","store_code":"","customer_code":"${end_customer}"}],"stock_categories":[${stock_categories}]}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:50.466" level="INFO">${value} = {"delivery_model":14,"start_nodes":[{"supplier_code":"SP00000021","purchase_subsidiary_code":"PT001","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_...</msg>
<status status="PASS" starttime="20250905 14:53:50.466" endtime="20250905 14:53:50.466"></status>
</kw>
<msg timestamp="20250905 14:53:50.466" level="INFO">${data} = {"delivery_model":14,"start_nodes":[{"supplier_code":"SP00000021","purchase_subsidiary_code":"PT001","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_...</msg>
<status status="PASS" starttime="20250905 14:53:50.465" endtime="20250905 14:53:50.466"></status>
</kw>
<kw name="/open/v1/transaction-chains/queries" library="财税云开放接口">
<doc>接口名称：交易链路查询接口
接口：/open/v1/transaction-chains/queries</doc>
<arguments>
<arg>${data}</arg>
<arg>${Authorization}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${Authorization}</arg>
</arguments>
<assign>
<var>&amp;{header}</var>
</assign>
<msg timestamp="20250905 14:53:50.468" level="INFO">&amp;{header} = { Content-Type=application/json | Authorization=d1009c225d004ce3fdf45b875f716860 }</msg>
<status status="PASS" starttime="20250905 14:53:50.467" endtime="20250905 14:53:50.468"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>api</arg>
<arg>${fc_url}[${env}]</arg>
<arg>headers=${header}</arg>
<arg>disable_warnings=1</arg>
</arguments>
<msg timestamp="20250905 14:53:50.469" level="INFO">Creating Session using : alias=api, url=https://financial-cloud-service.blueorigin.work, headers={'Content-Type': 'application/json', 'Authorization': 'd1009c225d004ce3fdf45b875f716860'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20250905 14:53:50.468" endtime="20250905 14:53:50.469"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<assign>
<var>${data_body}</var>
</assign>
<msg timestamp="20250905 14:53:50.469" level="INFO">${data_body} = {"delivery_model":14,"start_nodes":[{"supplier_code":"SP00000021","purchase_subsidiary_code":"PT001","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_...</msg>
<status status="PASS" starttime="20250905 14:53:50.469" endtime="20250905 14:53:50.469"></status>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<arguments>
<arg>api</arg>
<arg>/open/v1/transaction-chains/queries</arg>
<arg>data=${data_body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20250905 14:53:50.808" level="INFO">POST Request : url=https://financial-cloud-service.blueorigin.work/open/v1/transaction-chains/queries 
 path_url=/open/v1/transaction-chains/queries 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'd1009c225d004ce3fdf45b875f716860', 'Content-Length': '281'} 
 body={"delivery_model":14,"start_nodes":[{"supplier_code":"SP00000021","purchase_subsidiary_code":"PT001","store_code":"","country_Code":"","warehouse_code":""}],"end_nodes":[{"warehouse_code":"","country_Code":"","store_code":"","customer_code":"CM00000001"}],"stock_categories":[1,2]} 
 </msg>
<msg timestamp="20250905 14:53:50.808" level="INFO">POST Response : url=https://financial-cloud-service.blueorigin.work/open/v1/transaction-chains/queries 
 status=200, reason=OK 
 headers={'Date': 'Fri, 05 Sep 2025 06:53:50 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '89', 'Connection': 'keep-alive', 'X-Request-Id': '42f91e8c33af44efad077b2e16825069', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains'} 
 body={"code":1005094,"message":"没有匹配到供应商到客户的交易链路","data":null} 
 </msg>
<msg timestamp="20250905 14:53:50.808" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250905 14:53:50.469" endtime="20250905 14:53:50.808"></status>
</kw>
<msg timestamp="20250905 14:53:50.809" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250905 14:53:50.467" endtime="20250905 14:53:50.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<msg timestamp="20250905 14:53:50.811" level="INFO">{'code': 1005094, 'message': '没有匹配到供应商到客户的交易链路', 'data': None}</msg>
<status status="PASS" starttime="20250905 14:53:50.809" endtime="20250905 14:53:50.811"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{intf_code_list}</var>
</assign>
<msg timestamp="20250905 14:53:50.812" level="INFO">@{intf_code_list} = [ ]</msg>
<status status="PASS" starttime="20250905 14:53:50.811" endtime="20250905 14:53:50.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${response.json()}[code]==0</arg>
<arg>收集接口返回的交易链路</arg>
<arg>${response}</arg>
<arg>${intf_code_list}</arg>
<arg>ELSE</arg>
<arg>设置变量</arg>
<arg>${intf_code_list}</arg>
</arguments>
<assign>
<var>${intf_code_list}</var>
</assign>
<kw name="设置变量" library="常用关键字">
<arguments>
<arg>${intf_code_list}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20250905 14:53:50.814" level="INFO">${value} = []</msg>
<status status="PASS" starttime="20250905 14:53:50.814" endtime="20250905 14:53:50.814"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:50.814" endtime="20250905 14:53:50.814"></status>
</kw>
<msg timestamp="20250905 14:53:50.815" level="INFO">${intf_code_list} = []</msg>
<status status="PASS" starttime="20250905 14:53:50.812" endtime="20250905 14:53:50.815"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>sorted(${code_list})</arg>
</arguments>
<assign>
<var>${code_list}</var>
</assign>
<msg timestamp="20250905 14:53:50.816" level="INFO">${code_list} = []</msg>
<status status="PASS" starttime="20250905 14:53:50.815" endtime="20250905 14:53:50.816"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>sorted(${intf_code_list})</arg>
</arguments>
<assign>
<var>${intf_code_list}</var>
</assign>
<msg timestamp="20250905 14:53:50.816" level="INFO">${intf_code_list} = []</msg>
<status status="PASS" starttime="20250905 14:53:50.816" endtime="20250905 14:53:50.816"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${code_list}</arg>
<arg>${intf_code_list}</arg>
</arguments>
<status status="PASS" starttime="20250905 14:53:50.816" endtime="20250905 14:53:50.817"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:49.989" endtime="20250905 14:53:50.817"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:48.037" endtime="20250905 14:53:50.817" critical="yes"></status>
</test>
<kw name="断开所有数据库连接" library="常用关键字" type="teardown">
<kw name="Disconnect From All Databases" library="DatabaseLibrary">
<doc>Disconnects from all the databases -
useful when testing with multiple database connections (aliases).</doc>
<status status="PASS" starttime="20250905 14:53:50.820" endtime="20250905 14:53:50.820"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:50.819" endtime="20250905 14:53:50.821"></status>
</kw>
<status status="PASS" starttime="20250905 14:53:47.095" endtime="20250905 14:53:50.821"></status>
</suite>
<status status="PASS" starttime="20250905 14:53:47.094" endtime="20250905 14:53:50.823"></status>
</suite>
<status status="PASS" starttime="20250905 14:53:47.093" endtime="20250905 14:53:50.824"></status>
</suite>
<status status="PASS" starttime="20250905 14:53:47.074" endtime="20250905 14:53:50.825"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="财税云项目自动化案例">财税云项目自动化案例</stat>
<stat pass="1" fail="0" id="s1-s1" name="接口案例">财税云项目自动化案例.接口案例</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="财税云开放接口">财税云项目自动化案例.接口案例.财税云开放接口</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1" name="交易链路开放接口">财税云项目自动化案例.接口案例.财税云开放接口.交易链路开放接口</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
